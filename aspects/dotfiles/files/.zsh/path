# Append to $PATH-like, unless already present.
# If present, moves it to the end.
# See also: prepend_to().
function append_to() {
  emulate -L zsh
  local TARGET=$1
  local LOCATION=$2
  if [[ -d "$LOCATION" ]]; then
    case "$TARGET" in
      CDPATH)
        CDPATH=${CDPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        CDPATH=${CDPATH/#"$LOCATION:"/} # Delete from start.
        CDPATH=${CDPATH/%":$LOCATION"/} # Delete from end.
        CDPATH="${CDPATH:+$CDPATH:}$LOCATION" # Actually append (or if CDPATH is empty, just set).
        ;;
      INFOPATH)
        INFOPATH=${INFOPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        INFOPATH=${INFOPATH/#"$LOCATION:"/} # Delete from start.
        INFOPATH=${INFOPATH/%":$LOCATION"/} # Delete from end.
        INFOPATH="${INFOPATH:+$INFOPATH:}$LOCATION" # Actually append (or if INFOPATH is empty, just set).
        ;;
      MANPATH)
        MANPATH=${MANPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        MANPATH=${MANPATH/#"$LOCATION:"/} # Delete from start.
        MANPATH=${MANPATH/%":$LOCATION"/} # Delete from end.
        MANPATH="${MANPATH:+$MANPATH:}$LOCATION" # Actually append (or if MANPATH is empty, just set).
        ;;
      PATH)
        PATH=${PATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        PATH=${PATH/#"$LOCATION:"/} # Delete from start.
        PATH=${PATH/%":$LOCATION"/} # Delete from end.
        PATH="${PATH:+$PATH:}$LOCATION" # Actually append (or if PATH is empty, just set).
        ;;
    esac
  fi
}

# Prepend to $PATH-like, unless already present.
# If present, moves it to the start.
# See also: append_to().
function prepend_to() {
  emulate -L zsh
  local TARGET=$1
  local LOCATION=$2
  if [[ -d "$LOCATION" ]]; then
    case "$TARGET" in
      CDPATH)
        CDPATH=${CDPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        CDPATH=${CDPATH/#"$LOCATION:"/} # Delete from start.
        CDPATH=${CDPATH/%":$LOCATION"/} # Delete from end.
        CDPATH="$LOCATION${CDPATH:+:$CDPATH}" # Actually prepend (or if CDPATH is empty, just set).
        ;;
      INFOPATH)
        INFOPATH=${INFOPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        INFOPATH=${INFOPATH/#"$LOCATION:"/} # Delete from start.
        INFOPATH=${INFOPATH/%":$LOCATION"/} # Delete from end.
        INFOPATH="$LOCATION${INFOPATH:+:$INFOPATH}" # Actually prepend (or if INFOPATH is empty, just set).
        ;;
      MANPATH)
        MANPATH=${MANPATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        MANPATH=${MANPATH/#"$LOCATION:"/} # Delete from start.
        MANPATH=${MANPATH/%":$LOCATION"/} # Delete from end.
        MANPATH="$LOCATION${MANPATH:+:$MANPATH}" # Actually prepend (or if MANPATH is empty, just set).
        ;;
      PATH)
        PATH=${PATH//":$LOCATION:"/:} # Delete (potentially multiple) from middle.
        PATH=${PATH/#"$LOCATION:"/} # Delete from start.
        PATH=${PATH/%":$LOCATION"/} # Delete from end.
        PATH="$LOCATION${PATH:+:$PATH}" # Actually prepend (or if PATH is empty, just set).
        ;;
    esac
  fi
}

append_to PATH "$HOME/.local/bin"
append_to PATH "$HOME/.cabal/bin"

prepend_to PATH /usr/local/bin
prepend_to PATH /usr/local/sbin
prepend_to PATH /usr/local/opt/srm/bin
prepend_to PATH "$HOME/.cargo/bin"
prepend_to PATH "$HOME/code/go/bin"
prepend_to PATH "$HOME/.config/nvim/pack/bundle/opt/vcs-jump/bin"
prepend_to PATH /opt/nvim/squashfs-root/usr/bin

# On ARM Macs, Homebrew will use these instead of /usr/local.
prepend_to PATH /opt/homebrew/sbin
prepend_to PATH /opt/homebrew/bin
prepend_to MANPATH /opt/homebrew/share/man
prepend_to INFOPATH /opt/homebrew/share/info

# Directories reported by `xcode-select --show-manpaths`:
append_to MANPATH /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/share/man
append_to MANPATH /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/usr/share/man
append_to MANPATH /Applications/Xcode.app/Contents/Developer/usr/share/man
append_to MANPATH /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/share/man

# Normally these come from `/etc/man.conf`, but only if MANPATH is empty, so
# re-set them here.
prepend_to MANPATH /Library/Apple/usr/share/man
prepend_to MANPATH /usr/X11/man
prepend_to MANPATH /usr/local/share/man
prepend_to MANPATH /usr/share/man

prepend_to PATH /usr/local/opt/mysql@5.7/bin
prepend_to PATH /usr/local/opt/llvm/bin
test -n "$N_PREFIX" && prepend_to PATH "$N_PREFIX/bin"

prepend_to "$VOLTA_HOME/bin"

prepend_to PATH "$HOME/.zsh/bin"
prepend_to PATH "$HOME/bin"

# For running Neovim nightlies.
prepend_to PATH "${__WINCENT[DOTFILES]}/vendor/nvim-macos-arm64/bin"

# If you ever want to see this in easy-to-read form: `echo $PATH | tr : '\n'`
export PATH
